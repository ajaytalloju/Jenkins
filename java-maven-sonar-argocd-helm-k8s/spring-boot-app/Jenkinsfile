pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred')
        CUSTOM_IMAGE_NAME = 'ajaytalloju/maven-abhishek-docker-agent'
        FINAL_IMAGE_NAME = 'ajaytalloju/maven-abhishek-docker-agent'
    }
    stages {
        stage('Build Custom Docker Image') {
            steps {
                script {
                    // Create the Dockerfile and build the image
                    writeFile file: 'Dockerfile', text: '''
                    FROM adoptopenjdk/openjdk11:alpine-jre

                    # Simplify the artifact path
                    ARG artifact=target/spring-boot-web.jar

                    WORKDIR /opt/app
                    COPY ${artifact} app.jar

                    # This should not be changed
                    ENTRYPOINT ["java","-jar","app.jar"]
                    '''
                    // Build the custom Docker image
                    sh "docker build -t ${CUSTOM_IMAGE_NAME} ."
                }
            }
        }
        stage('Push Custom Docker Image to Docker Hub') {
            steps {
                script {
                    // Log in and push the custom Docker image
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${CUSTOM_IMAGE_NAME}"
                }
            }
        }
        stage('Test with Custom Image') {
            agent {
                docker { image "${CUSTOM_IMAGE_NAME}" }
            }
            steps {
                sh 'echo "Testing with custom Docker image..."'
            }
        }
        stage('Tag Final Image') {
            steps {
                script {
                    // Tag the Docker image
                    sh "docker tag ${CUSTOM_IMAGE_NAME} ${FINAL_IMAGE_NAME}"
                }
            }
        }
        stage('Push Final Image to Docker Hub') {
            steps {
                script {
                    // Push the tagged image to Docker Hub
                    sh "docker push ${FINAL_IMAGE_NAME}"
                }
            }
        }
    }
}
